# demos desdede
ddesde
get wd
getwd
setwd("C:\Users\office depot\Documents\GitHub\Lab_Econ_I\Jimenez_MA")
setwd("C:/Users/office depot/Documents/GitHub/Lab_Econ_I/Jimenez_MA")
getwd()
c(1,1,1,1,1,1) #Crear vector
c(1,1,1,1,1,1) #Crear vector
Ex=matrix(c(Ex1,Ex2,Ex3),3)
Ex=matrix(c(Ex1,Ex2,Ex3),3)
Ex=matrix(C(Ex1,Ex2,Ex3),3)
Ex=matrix(C(Ex1,Ex2,Ex3),3)
Ex=matrix(C(EX1,Ex2,Ex3),3)
Ex = matrix(C(EX1,Ex2,Ex3),3)
Ex = matrix(C(EX1,Ex2,Ex3),3)
Ex = matrix(C(EX1, Ex2, Ex3),3)
Ex = matrix(c(EX1, Ex2, Ex3), 2)
Ex = matrix(c(Ex1, Ex2, Ex3), 2)
Ex1 = 0
Ex2 = -4
Ex3 = 1
Ey1 = -1
Ey2 = 4
Varx1=-1
Varx2=4
Varx3=2
Vary1=1
vary2=9
COvx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
Ex = matrix(c(Ex1, Ex2, Ex3), 2)
#Realizar Ejercicios
Ex1 = 0
Ex2 = -4
Ex3 = 1
Ey1 = -1
Ey2 = 4
Varx1=-1
Varx2=4
Varx3=2
Vary1=1
vary2=9
COvx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
Ex = matrix(c(Ex1, Ex2, Ex3),3)
Ex1 = 0
Ex2 = -4
Ex3 = 1
Ey1 = -1
Ey2 = 4
Varx1=-1
Varx2=4
Varx3=2
Vary1=1
vary2=9
COvx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
Ex = matrix(c(Ex1,Ex2,Ex3),2)
Ex1 = 0
Ex2 = -4
Ex3 = 1
Ey1 = -1
Ey2 = 4
Varx1=-1
Varx2=4
Varx3=2
Vary1=1
vary2=9
COvx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
Ex = matrix(c(Ex1,Ex2,Ex3),3)
#Operaciones con calculadora
2+2
4/2
2*2
2^2
#Entre otros casos.
x <-c(10,20,30,40) #Nombrar y generar vectores
x=-100
abs (-5) #Valor absoluto
e^x #Exponencial
log (-x)
exp(x) #Exponencial
log (-x)
c<-Adriana
c<-"Aki" #Variable string
#Tipo de datos
Mode (c)
Class (c)
c<-"Aki" #Variable string
#Tipo de datos
mode (c)
class (c)
M<-matrix(data=10, nr=2, nc=2)
N<-matrix(4:9, 2, 3)
m
M
N
O<-matrix(5:10, 2, 3, byrow=TRUE)
O
P<-matriz(data=randn,2,3)
P<-matriz(data=rnorm,2,3)
P<-matriz(rnorm,2,3)
P<-matriz(rnorm(),2,3)
P<-matriz(rnorm(1),2,3)
P<-matriz(data=rnorm(1),2,3)
P<-matrix(data=rnorm(1),2,3)
P
P
Q <- matrix(1, nr = 2, nc = 2)
R <- matrix(2, nr = 2, nc = 2)
rbind(Q, R)
Q+R
S<-matrix(5:11,3,3)
S<-matrix(5:10,3,3)
T<-solve(S)
E<-c(5,3,5,6,8,10)
S<-matrix(E,3,3)
T<-solve(S)
E<-c(5,3,5,7,8,10)
S<-matrix(E,3,3)
T<-solve(S)
E<-c(5,3,5,7,8,10)
S<-matrix(E,3,3)
U<-solve(S)
E<-c(5,3,5,7,8,10,4,8,12)
S<-matrix(E,3,3)
U<-solve(S)
S
U
P%*%S
cbind(Q,R)
T<-matrix(data=rnorm(1),4,4)
T
E%*%T
T%*%E
I<-matrix(data=rnorm(1),4,4)
E%*%I
I%*%E
E
H<-c(1,2,3,4)
H%*%I
getwd() #Conocer el directorio
setwd("C:/Users/office depot/Documents/GitHub/Lab_Econ_I/Jimenez_MA") #Cambiar directorio
#Operaciones con calculadora
2+2
4/2
2*2
2^2
x=-100
abs (-5) #Valor absoluto
exp(x) #Exponencial
log (-x)
x=-100 #Nombrar variable
abs (-5) #Valor absoluto
exp(x) #Exponencial
log (-x)
c<-"Aki" #Variable string
mode (c) #Tipo de datos
class (c) #Tipo de datos
c<-"Aki" #Variable string
mode (c) #Tipo de datos
class (c) #Tipo de datos
mode (x) #Tipo de datos
z <-c(10,20,30,40) #Nombrar y generar vectores
A<-c("a","b","c","d","e","f","g","h","i","j") #COnjunto
Bool<-c(TRUE,FALSE) #Generar Booleano
Z
z
A
Bool
M<-matrix(data=10, nr=2, nc=2) #Matriz llena del mismo número
N<-matrix(4:9, 2, 3) #Matriz con rango de números
O<-matrix(5:10, 2, 3, byrow=TRUE) #Matriz por fila
P<-matrix(data=rnorm(1),2,3) #Matriz con números aleatorios
M
N
O
P
P
View(P)
View(P)
Q <- matrix(1, nr = 2, nc = 2)
R <- matrix(2, nr = 2, nc = 2)
rbind(Q, R) #COncatenar hacia abajo
cbind(Q,R) #COncatenar hacia arriba
cbind(Q,R) #COncatenar hacia derecha
Q
R
cbind(Q,R) #COncatenar hacia derecha
Q+R #Suma de matrices
E<-c(5,3,5,7,8,10,4,8,12)
S<-matrix(E,3,3)
U<-solve(S) #Matriz inversa
E
S
U
P%*%S
I<-matrix(data=rnorm(1),4,4)
H<-c(1,2,3,4)
H%*%I #Vector por matriz
I
I<-matrix(rnorm(1),4,4)
H<-c(1,2,3,4)
H%*%I #Vector por matriz
H
Ex1=0
Ex2=-4
Ex3=1
Ey1=-1
Ey2=4
varx1=1
varx2=4
varx3=2
vary1=1
vary2=9
covx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
# Inciso 4.a)
EX=matrix(c(Ex1,Ex2,Ex3)) #Esperanza de X
VarX=matrix(c(varx1,covx1x2,covx1x3,covx1x2,varx2,covx2x3,covx1x3,covx2x3,varx3),3) #Varianza de X
VarY=matrix(c(vary1,covy1y2,covy1y2,vary2),2) #Varianza de Y
EX
VarX
VarY
setwd("C:/Users/office depot/Documents/GitHub/Lab_Econ_I/Jimenez_MA")
getwd()
install.packages("dplyr")
install.packages("tidyr")
install.packages("RCurl")
install.packages("httr")
install.packages("ggplot2")
install.packages("stargazer")
library(XML)
library(dplyr)
library(tidyr)
library(httr)
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("RCurl")
#install.packages("httr")
# install.packages("ggplot2")
# install.packages("stargazer")
install.packages("XML")
library(XML)
library(dplyr)
library(tidyr)
library(httr)
sal2018 <- GET("http://www.usatoday.com/sports/mlb/salaries/2018/player/all/#card_full_width_main")
sal2018 <- readHTMLTable(rawToChar(sal2018$content))[[1]]
sal2017 <- GET("http://www.usatoday.com/sports/mlb/salaries/2017/player/all/#card_full_width_main")
sal2017 <- readHTMLTable(rawToChar(sal2017$content))[[1]]
sal2016 <- GET("http://www.usatoday.com/sports/mlb/salaries/2016/player/all/#card_full_width_main")
sal2016 <- readHTMLTable(rawToChar(sal2016$content))[[1]]
sal2015 <- readHTMLTable("MLBSalaries2015.html")[[1]]
sal2014 <- GET("http://www.usatoday.com/sports/mlb/salaries/2014/player/all/#card_full_width_main")
sal2014 <- readHTMLTable(rawToChar(sal2014$content))[[1]]
sal2013 <- GET("http://www.usatoday.com/sports/mlb/salaries/2013/player/all/#card_full_width_main")
sal2013 <- readHTMLTable(rawToChar(sal2013$content))[[1]]
sal2012 <- GET("http://www.usatoday.com/sports/mlb/salaries/2012/player/all/#card_full_width_main")
sal2012 <- readHTMLTable(rawToChar(sal2012$content))[[1]]
sal2011 <- GET("http://www.usatoday.com/sports/mlb/salaries/2011/player/all/#card_full_width_main")
sal2011 <- readHTMLTable(rawToChar(sal2011$content))[[1]]
sal2018$year <- 2018
sal2017$year <- 2017
sal2016$year <- 2016
sal2015$year <- 2015
sal2014$year <- 2014
sal2013$year <- 2013
sal2012$year <- 2012
sal2011$year <- 2011
salaries <- bind_rows(sal2018,sal2017,sal2016,sal2015,sal2014,sal2013,sal2012,sal2011)
salaries <- select(salaries, -rank)
write.csv(salaries, "salaries.csv", row.names = FALSE)
salaries <- read.csv("salaries.csv")
salaries <- select(salaries, year, Salary, Name, Team)
str(salaries)
salaries$Salary <- as.numeric(gsub("[[:punct:]]","",salaries$Salary))
summary(salaries$Salary)
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
tail(salaries, n=5)
salaries <- filter(salaries, Salary != 0)
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
salaries <- salaries %>% group_by(year, Team ) %>% mutate(payroll=sum(Salary), pctile=ntile(Salary,5))
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
salaries <- filter(salaries, pctile==5)
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
salaries <- filter(salaries, pctile==5)
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
salaries <- salaries %>% group_by(year, Team, payroll) %>% summarize(top20=sum(Salary))
salaries$top20share <- salaries$top20/salaries$payroll*100
salaries$payroll <- salaries$payroll/1000000
summary(salaries)
salaries <- arrange(salaries, top20share)
head(salaries, n=3)
tail(salaries, n=3)
salaries$Team <- as.character(salaries$Team)
teamwins <- GET("http://www.baseball-reference.com/leagues/MLB/#teams_team_wins3000::none")
teamwins <- readHTMLTable(rawToChar(teamwins$content), stringsAsFactors = FALSE)[[1]]
write.csv(teamwins, "teamwins.csv", row.names = FALSE)
teamwins <- read.csv("teamwins.csv",stringsAsFactors = FALSE)
teamwins$Year <- as.numeric(teamwins$Year)
teamwins <- filter(teamwins, !is.na(teamwins$Year))
teamwins <- filter(teamwins, Year>2012)
teamwins <- unite(teamwins, year_games, Year, G)
teamwins2 <- gather(data=teamwins, value=wins, key=team, ARI,ATL,BLA,BAL,BOS,CHC,CHW,CIN,CLE,COL,DET,HOU,KCR,LAA,LAD,MIA,MIL,MIN,NYM,NYY,OAK,PHI,PIT,SDP,SFG,SEA,STL,TBR,TEX,TOR,WSN)
head(teamwins2)
teamwins2 <- separate(teamwins2,year_games, c("year", "games"))
head(teamwins2)
teamwins2$games <- as.numeric(teamwins2$games)
teamwins2$wins <- as.numeric(teamwins2$wins)
teamwins2$year <- as.numeric(teamwins2$year)
teamwins2$pctwin <- teamwins2$wins/teamwins2$games*100
teamwins2 <- arrange(teamwins2,pctwin)
summary(teamwins2)
head(teamwins2)
tail(teamwins2)
teamwins2 <- filter(teamwins2, !is.na(pctwin))
tail(teamwins2)
salaries$Team[salaries$Team=="SF"] = "SFG"
salaries$Team[salaries$Team=="KC"] = "KCR"
salaries$Team[salaries$Team=="SD"] = "SDP"
salaries$Team[salaries$Team=="TB"] = "TBR"
salaries$Team[salaries$Team=="WSH"] = "WSN"
salaries$Team[salaries$Team=="CWS"] = "CHW"
teamwins2$Team <- as.character(teamwins2$team)
teamwins2 <- select(teamwins2, -team)
merged <- inner_join(teamwins2, salaries,by=c("year", "Team"))
summary(merged)
write.csv(merged, "database2013_2018.csv", row.names = FALSE)
View(merged)
library(ggplot2)
ggplot(data=merged, aes(x=payroll,y=pctwin, label=Team, color=as.factor(year)))+ geom_text(size=3) +
ggtitle("Payroll and performance of MLB teams, 2013-2018") +
xlab("Payroll in millions") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
ggplot(data=merged, aes(x=top20share,y=pctwin, label=Team, color=as.factor(year))) + geom_text(size=3) +
ggtitle("Team inequality and performance of MLB teams, 2013-2018") +
xlab("Share of payroll earned by top 20%") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
library(stargazer)
m1 <- lm(pctwin ~ top20share, data=merged)
m2 <- lm(pctwin ~ top20share + payroll, data=merged)
m3 <- lm(pctwin ~ top20share + log(payroll) , data=merged)
stargazer(m1,m2,m3, type="text")
