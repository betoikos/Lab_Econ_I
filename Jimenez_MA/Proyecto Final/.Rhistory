xlab("Payroll in millions") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
ggplot(data=merged, aes(x=top20share,y=pctwin, label=Team, color=as.factor(year))) + geom_text(size=3) +
ggtitle("Team inequality and performance of MLB teams, 2007-2013") +
xlab("Share of payroll earned by top 20%") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
# ------------------------------------------
# 8. Regression Analysis
library(stargazer)
# El paquete stargazer crea tablas para html, latex i ascii bien formateadas.
m1 <- lm(pctwin ~ top20share, data=merged) #Regresion (Y-X, Database)
m2 <- lm(pctwin ~ top20share + payroll, data=merged)
m3 <- lm(pctwin ~ top20share + log(payroll) , data=merged)
stargazer(m1,m2,m3, type="text")
#Hacer la regresion para el mismo numero de años 2007 - 2012 Y hacer interpretación en una cuartilla
library(XML)
library(dplyr)
library(tidyr)
library(httr)
#Creando base de datos
sal2010 <- GET("http://www.usatoday.com/sports/mlb/salaries/2010/player/all/#card_full_width_main")
sal2010 <- readHTMLTable(rawToChar(sal2010$content))[[1]]
sal2009 <- GET("http://www.usatoday.com/sports/mlb/salaries/2009/player/all/#card_full_width_main")
sal2009 <- readHTMLTable(rawToChar(sal2009$content))[[1]]
sal2008 <- GET("http://www.usatoday.com/sports/mlb/salaries/2008/player/all/#card_full_width_main")
sal2008 <- readHTMLTable(rawToChar(sal2008$content))[[1]]
sal2007 <- GET("http://www.usatoday.com/sports/mlb/salaries/2007/player/all/#card_full_width_main")
sal2007 <- readHTMLTable(rawToChar(sal2007$content))[[1]]
sal2006 <- GET("http://www.usatoday.com/sports/mlb/salaries/2006/player/all/#card_full_width_main")
sal2006 <- readHTMLTable(rawToChar(sal2006$content))[[1]]
sal2005 <- GET("http://www.usatoday.com/sports/mlb/salaries/2005/player/all/#card_full_width_main")
sal2005 <- readHTMLTable(rawToChar(sal2005$content))[[1]]
sal2004 <- GET("http://www.usatoday.com/sports/mlb/salaries/2004/player/all/#card_full_width_main")
sal2004 <- readHTMLTable(rawToChar(sal2004$content))[[1]]
sal2003 <- GET("http://www.usatoday.com/sports/mlb/salaries/2003/player/all/#card_full_width_main")
sal2003 <- readHTMLTable(rawToChar(sal2003$content))[[1]]
# Asignamos el año
sal2010$year <- 2010
sal2009$year <- 2009
sal2008$year <- 2008
sal2007$year <- 2007
sal2006$year <- 2006
sal2005$year <- 2005
sal2004$year <- 2004
sal2003$year <- 2003
salaries <- bind_rows(sal2010,sal2009,sal2008,sal2007,sal2006,sal2005,sal2004,sal2003)
salaries <- select(salaries, -rank)
write.csv(salaries, "salaries.csv", row.names = FALSE)
# Procesando base de datos.
salaries <- read.csv("salaries.csv")
salaries <- select(salaries, year, Salary, Name, Team)
str(salaries)
salaries$Salary <- as.numeric(gsub("[[:punct:]]","",salaries$Salary))
summary(salaries$Salary)
# Eliminando ceros
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
tail(salaries, n=5)
salaries <- filter(salaries, Salary != 0)
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
# Agrupando datos
# Se acomodan por quintiles
salaries <- salaries %>% group_by(year, Team ) %>% mutate(payroll=sum(Salary), pctile=ntile(Salary,5))
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
# Quintil más alto
salaries <- filter(salaries, pctile==5)
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
# Procesando datos agregados.
salaries <- salaries %>% group_by(year, Team, payroll) %>% summarize(top20=sum(Salary))
salaries$top20share <- salaries$top20/salaries$payroll*100
# Pasando unidades a millones de dólares.
salaries$payroll <- salaries$payroll/1000000
summary(salaries)
salaries <- arrange(salaries, top20share)
head(salaries, n=3)
tail(salaries, n=3)
# Variable Team en string
salaries$Team <- as.character(salaries$Team)
# Get the data on team performance, data retrieval
teamwins <- GET("http://www.baseball-reference.com/leagues/MLB/#teams_team_wins3000::none")
teamwins <- readHTMLTable(rawToChar(teamwins$content), stringsAsFactors = FALSE)[[1]]
write.csv(teamwins, "teamwins.csv", row.names = FALSE)
teamwins <- read.csv("teamwins.csv",stringsAsFactors = FALSE)
# Filtrando segunda base de datos.
teamwins$Year <- as.numeric(teamwins$Year)
teamwins <- filter(teamwins, !is.na(teamwins$Year))
#Datos entre 2005 y 2010
teamwins <- filter(teamwins, Year>2004 & Year<2011)
# Reacomodando los datos
# Primero generamos una variable year_games que colapsa años y juegos
teamwins <- unite(teamwins, year_games, Year, G)
# Usamos gather para colapsar columnas de wins por cada team
teamwins2 <- gather(data=teamwins, value=wins, key=team, ARI,ATL,BLA,BAL,BOS,CHC,CHW,CIN,CLE,COL,DET,HOU,KCR,LAA,LAD,MIA,MIL,MIN,NYM,NYY,OAK,PHI,PIT,SDP,SFG,SEA,STL,TBR,TEX,TOR,WSN)
head(teamwins2)
# Nuevamente separamos años y juegos
teamwins2 <- separate(teamwins2,year_games, c("year", "games"))
head(teamwins2)
# Convertir algunas variables a numéricas
teamwins2$games <- as.numeric(teamwins2$games)
teamwins2$wins <- as.numeric(teamwins2$wins)
teamwins2$year <- as.numeric(teamwins2$year)
# Obtenemos el porcentaje de ganados
teamwins2$pctwin <- teamwins2$wins/teamwins2$games*100
teamwins2 <- arrange(teamwins2,pctwin)
# Estadísticos y clasificación
summary(teamwins2)
head(teamwins2)
tail(teamwins2)
#Eliminando NA
teamwins2 <- filter(teamwins2, !is.na(pctwin))
tail(teamwins2)
# Uniendo base de datos
#Homologación de códigos
salaries$Team[salaries$Team=="SF"] = "SFG"
salaries$Team[salaries$Team=="KC"] = "KCR"
salaries$Team[salaries$Team=="SD"] = "SDP"
salaries$Team[salaries$Team=="TB"] = "TBR"
salaries$Team[salaries$Team=="WSH"] = "WSN"
salaries$Team[salaries$Team=="CWS"] = "CHW"
# Homologar nombre de la columna a Team
teamwins2$Team <- as.character(teamwins2$team)
teamwins2 <- select(teamwins2, -team)
# Uniendo por year y Team.
merged <- inner_join(teamwins2, salaries,by=c("year", "Team"))
summary(merged)
write.csv(merged, "database2005_2010.csv", row.names = FALSE)
# Algunas Gráficas
library(ggplot2)
ggplot(data=merged, aes(x=payroll,y=pctwin, label=Team, color=as.factor(year)))+ geom_text(size=3) +
ggtitle("Payroll and performance of MLB teams, 2005-2010") +
xlab("Payroll in millions") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
ggplot(data=merged, aes(x=top20share,y=pctwin, label=Team, color=as.factor(year))) + geom_text(size=3) +
ggtitle("Team inequality and performance of MLB teams, 2005-2010") +
xlab("Share of payroll earned by top 20%") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
# Regresión
library(stargazer)
model1 <- lm(pctwin ~ top20share, data=merged)
model2 <- lm(pctwin ~ top20share + payroll, data=merged)
model3 <- lm(pctwin ~ top20share + log(payroll) , data=merged)
stargazer(model1,model2,model3, type="text")
qqnorm(rstandard(model1))
qqline(rstandard(model1))
qqnorm(rstandard(model2))
qqline(rstandard(model2))
qqline(rstandard(model3))
qqnorm(rstandard(model3))
qqline(rstandard(model3))
#Ejercicio 4
Ex1=0
Ex2=-4
Ex3=1
Ey1=-1
Ey2=4
varx1=1
varx2=4
varx3=2
vary1=1
vary2=9
covx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
# Inciso 4.I)
EX<-matrix(c(Ex1,Ex2,Ex3)) #Esperanza de X
VarX<-matrix(c(varx1,covx1x2,covx1x3,covx1x2,varx2,covx2x3,covx1x3,covx2x3,varx3),3) #Varianza de X
VarY<-matrix(c(vary1,covy1y2,covy1y2,vary2),2) #Varianza de Y
CovXY<-matrix(c(covx1y1,covx2y1,covx3y1,covx1y2,covx2y2,covx3y2),3) #Covarianza(X,Y)
CovYX<-matrix(c(covx1y1,covx1y2,covx2y1,covx2y2,covx3y1,covx3y2),2) #Covarianza(Y,X)
# Inciso 4.II)
S<-matrix(c(-1,3/2,-4),1)
ESX<-S%*%EX
VarSX<-S%*%VarX%*%(t(S))
# Inciso 4.III)
A<-matrix(c(-2,1,0,4,1,-2),2)
b<-matrix(c(1,1))
EAX<-(A%*%EX)+b
VarAX<-A%*%VarX%*%t(A)
# Inciso 4.IV)
U<-matrix(c(1,0,0,0,1,2,-3,0,3),3)
u<-matrix(c(2,0,5))
V<-matrix(c(1,-1,-1,4,1,-1),2)
v<-matrix(c(1,0))
EUX<-(U%*%EX)+u
EVX<-(V%*%EX)+v
VarUX<-U%*%VarX%*%t(U)
VarVX<-V%*%VarX%*%t(V)
CovUXV<-U%*%VarX%*%t(V)
CovVXU<-V%*%VarX%*%t(U)
# Inciso 4.V)
C<-matrix(c(-2,1,5),1)
d<-8
CovAXC<-A%*%VarX%*%t(C)
CovAXC
K<-matrix(c(1,0,0),1)
M<-matrix(c(0,0,1,0,0,1),2)
VarK<-K%*%VarJ%*%t(K)
VarM<-M%*%VarJ%*%t(M)
CovKM<-K%*%VarJ%*%t(M)
COvMK<-M%*%VarJ%*%t(K)
EJ<-matrix(c(1,0,2))
VarJ<-matrix(c(.8,0.4,-0.2,0.4,1,-0.8,-0.2,-0.8,2),3)
# Inciso 6.I)
K<-matrix(c(1,0,0),1)
M<-matrix(c(0,0,1,0,0,1),2)
VarK<-K%*%VarJ%*%t(K)
VarM<-M%*%VarJ%*%t(M)
CovKM<-K%*%VarJ%*%t(M)
COvMK<-M%*%VarJ%*%t(K)
VarK
VarM
CovKM
COvMK
EKKt
EKKt<-(K%*%VarJ%*%t(K))+(K%*%EJ%*%t(EJ)%*%t(K))
EMMt<-(M%*%VarJ%*%t(M))+(M%*%EJ%*%t(EJ)%*%t(M))
EMtM<-(matrix(c(0,1,0),1)%*%VarJ%*%t(matrix(c(0,1,0),1)))+(matrix(c(0,1,0),1)%*%EJ%*%t(EJ)%*%t(matrix(c(0,1,0),1)))+(matrix(c(0,0,1),1)%*%VarJ%*%t(matrix(c(0,0,1),1)))+(matrix(c(0,0,1),1)%*%EJ%*%t(EJ)%*%t(matrix(c(0,0,1),1)))
EKMt<-(K%*%VarJ%*%t(M))+(K%*%EJ%*%t(EJ)%*%t(M))
EMKt<-(M%*%VarJ%*%t(K))+(M%*%EJ%*%t(EJ)%*%t(K))
EKKt
EMMt
EMtM
EKMt
EMKt
qqnorm(rstandard(model1))
qqline(rstandard(model2))
getwd()
setwd("C:/Users/office depot/Documents/GitHub/Lab_Econ_I/Jimenez_MA")
#----------Tarea 1----------
#Ejercicio 4
Ex1=0
Ex2=-4
Ex3=1
Ey1=-1
Ey2=4
varx1=1
varx2=4
varx3=2
vary1=1
vary2=9
covx1x2=-1
covx1x3=0
covx1y1=0
covx1y2=1
covx2x3=2
covx2y1=-1
covx2y2=-3
covx3y1=0
covx3y2=3
covy1y2=-2
# Inciso 4.I)
EX<-matrix(c(Ex1,Ex2,Ex3)) #Esperanza de X
VarX<-matrix(c(varx1,covx1x2,covx1x3,covx1x2,varx2,covx2x3,covx1x3,covx2x3,varx3),3) #Varianza de X
VarY<-matrix(c(vary1,covy1y2,covy1y2,vary2),2) #Varianza de Y
CovXY<-matrix(c(covx1y1,covx2y1,covx3y1,covx1y2,covx2y2,covx3y2),3) #Covarianza(X,Y)
CovYX<-matrix(c(covx1y1,covx1y2,covx2y1,covx2y2,covx3y1,covx3y2),2) #Covarianza(Y,X)
# Inciso 4.II)
S<-matrix(c(-1,3/2,-4),1)
ESX<-S%*%EX
VarSX<-S%*%VarX%*%(t(S))
# Inciso 4.III)
A<-matrix(c(-2,1,0,4,1,-2),2)
b<-matrix(c(1,1))
EAX<-(A%*%EX)+b
VarAX<-A%*%VarX%*%t(A)
# Inciso 4.IV)
U<-matrix(c(1,0,0,0,1,2,-3,0,3),3)
u<-matrix(c(2,0,5))
V<-matrix(c(1,-1,-1,4,1,-1),2)
v<-matrix(c(1,0))
EUX<-(U%*%EX)+u
EVX<-(V%*%EX)+v
VarUX<-U%*%VarX%*%t(U)
VarVX<-V%*%VarX%*%t(V)
CovUXV<-U%*%VarX%*%t(V)
CovVXU<-V%*%VarX%*%t(U)
# Inciso 4.V)
C<-matrix(c(-2,1,5),1)
d<-8
CovAXC<-A%*%VarX%*%t(C)
# Inciso 4.VI)
D<-matrix(c(1,2,4,0,-2,3),3)
e<-matrix(c(1,0,-1))
CovAXYD<-A%*%CovXY%*%t(D)
# Inciso 4.VII)
T<-matrix(c(-1,1,0,2,-4,0),2)
t<-matrix(c(0,-1))
VarTX<-T%*%VarX%*%t(T)
# Inciso 4.VIII)
W<-matrix(c(-1,1,0,2,-4,0),2)
w<-matrix(c(0,-1))
Z<-matrix(c(1,0,1,1,1,-1),3)
CovWXYZ<-W%*%CovXY%*%t(Z)
CovZYXW<-Z%*%CovYX%*%t(W)
#Ejercicio 6
EJ<-matrix(c(1,0,2))
VarJ<-matrix(c(.8,0.4,-0.2,0.4,1,-0.8,-0.2,-0.8,2),3)
# Inciso 6.I)
K<-matrix(c(1,0,0),1)
M<-matrix(c(0,0,1,0,0,1),2)
VarK<-K%*%VarJ%*%t(K)
VarM<-M%*%VarJ%*%t(M)
CovKM<-K%*%VarJ%*%t(M)
COvMK<-M%*%VarJ%*%t(K)
#Inciso 6.II)
EKKt<-(K%*%VarJ%*%t(K))+(K%*%EJ%*%t(EJ)%*%t(K))
EMMt<-(M%*%VarJ%*%t(M))+(M%*%EJ%*%t(EJ)%*%t(M))
EMtM<-(matrix(c(0,1,0),1)%*%VarJ%*%t(matrix(c(0,1,0),1)))+(matrix(c(0,1,0),1)%*%EJ%*%t(EJ)%*%t(matrix(c(0,1,0),1)))+(matrix(c(0,0,1),1)%*%VarJ%*%t(matrix(c(0,0,1),1)))+(matrix(c(0,0,1),1)%*%EJ%*%t(EJ)%*%t(matrix(c(0,0,1),1)))
EKMt<-(K%*%VarJ%*%t(M))+(K%*%EJ%*%t(EJ)%*%t(M))
EMKt<-(M%*%VarJ%*%t(K))+(M%*%EJ%*%t(EJ)%*%t(K))
#----------Tarea 2----------
#Pregunta 5
# Solamente se requiere especificar Y, X y las restricciones en forma matricial.
n<-10 #Colocar número de observaciones.
b<- #Colocar vector deverdaderos parámetros.
U<- #Colocar el vector de U (media cero y homocedástica).
Xj<- #Colocar la matriz de X (variables independientes).
Constante<-matrix(rep(1,n),n)
X<-cbind(Constante,Xj)
R<- # Colocar matriz de restricciones.
r<- #Colocar vector de resultados de las restricciones.
bMCO = function(b,X,U){
a<-b+(solve(t(X)%*%X)%*%t(X)%*%U)
return(a)
}
bMCR = function(bMCO,X,R,r){
b<-bMCO-((solve(t(X)%*%X))%*%t(R)%*%(solve(R%*%solve(t(X)%*%X)%*%t(R)))%*%((R%*%bMCO)-r))
return(b)
}
bMCO<-a
bMCR<-b
#----------Tarea 3----------
library(mvtnorm)
set.seed(100)
#Pregunta 5
Sigma1<-matrix(c(1,-.25,-.25,.5),2)
Muestra1<-rmvnorm(100,mean=c(0,-1),sigma=Sigma1)
Sigma2<-matrix(c(1,(1/3),-.5,(1/3),.25,0,-.5,0,1),3)
Muestra2<-rmvnorm(100,mean=c(-2,0,-2),sigma=Sigma2)
#Pregunta 6
Sigma3<-matrix(c(1,0,1,0,0,9,0,1,1,0,4,0,0,1,0,9),4)
Muestra3<-rmvnorm(200,mean=c(0,0,1,1),sigma=Sigma3)
#----------Tarea 4----------
library(mvtnorm)
set.seed(100)
#Pregunta 5
n<-10 #Colocar n observaciones.
Mean<-rep(0,n) #Vector de medias.
VarU<-1 #Colocar sigma cuadrada si se cumple homocedasticidad.
Sigma4<-diag(VarU,n)
U<-t(rmvnorm(1,mean=Mean,sigma=Sigma4))
#Mínimos cuadrados ordinarios
n1<-800
Sigma5<-matrix(c(0.8,0.4,-0.2,0.4,1,-0.8,-0.2,-0.8,2),3)
Muestra<-rmvnorm(n1,mean=c(1,0,2),sigma=Sigma5)
Y<-Muestra[,1]
Xj<-Muestra[,2:3]
Constante<-matrix(rep(1,n1),n1)
X<-cbind(Constante,Xj)
bMCO<-(solve(t(X)%*%X))%*%(t(X)%*%Y)
#----------Replicación modelo desempeño----------
library(XML)
library(dplyr)
library(tidyr)
library(httr)
#Creando base de datos
sal2007 <- GET("http://www.usatoday.com/sports/mlb/salaries/2007/player/all/#card_full_width_main")
sal2007 <- readHTMLTable(rawToChar(sal2007$content))[[1]]
sal2008 <- GET("http://www.usatoday.com/sports/mlb/salaries/2008/player/all/#card_full_width_main")
sal2008 <- readHTMLTable(rawToChar(sal2008$content))[[1]]
sal2009 <- GET("http://www.usatoday.com/sports/mlb/salaries/2009/player/all/#card_full_width_main")
getwd()
setwd("C:/Users/office depot/Downloads/Proyecto Final")
library(XML)
library(dplyr)
library(tidyr)
library(httr)
#Creando base de datos
sal2007 <- GET("http://www.usatoday.com/sports/mlb/salaries/2007/player/all/#card_full_width_main")
sal2007 <- readHTMLTable(rawToChar(sal2007$content))[[1]]
sal2008 <- GET("http://www.usatoday.com/sports/mlb/salaries/2008/player/all/#card_full_width_main")
sal2008 <- readHTMLTable(rawToChar(sal2008$content))[[1]]
sal2009 <- GET("http://www.usatoday.com/sports/mlb/salaries/2009/player/all/#card_full_width_main")
sal2009 <- readHTMLTable(rawToChar(sal2009$content))[[1]]
sal2010 <- GET("http://www.usatoday.com/sports/mlb/salaries/201/player/all/#card_full_width_main")
sal2010 <- readHTMLTable(rawToChar(sal2010$content))[[1]]
sal2011 <- GET("http://www.usatoday.com/sports/mlb/salaries/2011/player/all/#card_full_width_main")
sal2011 <- readHTMLTable(rawToChar(sal2011$content))[[1]]
sal2012 <- GET("http://www.usatoday.com/sports/mlb/salaries/2012/player/all/#card_full_width_main")
sal2012 <- readHTMLTable(rawToChar(sal2012$content))[[1]]
sal2013 <- GET("http://www.usatoday.com/sports/mlb/salaries/2013/player/all/#card_full_width_main")
sal2013 <- readHTMLTable(rawToChar(sal2013$content))[[1]]sal2003 <- readHTMLTable(rawToChar(sal2003$content))[[1]]
# Asignamos el año
sal2007$year <- 2007
sal2008$year <- 2008
sal2009$year <- 2009
sal2010$year <- 2010
sal2011$year <- 2011
sal2012$year <- 2012
sal2013$year <- 2013
salaries <- bind_rows(sal2013,sal2012,sal2011,sal2010,sal2009,sal2008,sal2007,sal2006)
salaries <- select(salaries, -rank)
write.csv(salaries, "salaries.csv", row.names = FALSE)
# Procesando base de datos.
salaries <- read.csv("salaries.csv")
salaries <- select(salaries, year, Salary, Name, Team)
str(salaries)
salaries$Salary <- as.numeric(gsub("[[:punct:]]","",salaries$Salary))
summary(salaries$Salary)
# Eliminando ceros
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
tail(salaries, n=5)
salaries <- filter(salaries, Salary != 0)
salaries <- arrange(salaries, Salary)
head(salaries, n=5)
# Agrupando datos
# Se acomodan por quintiles
salaries <- salaries %>% group_by(year, Team ) %>% mutate(payroll=sum(Salary), pctile=ntile(Salary,5))
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
# Quintil más alto
salaries <- filter(salaries, pctile==5)
salaries <- arrange(salaries, Salary)
head(salaries, n=3)
# Procesando datos agregados.
salaries <- salaries %>% group_by(year, Team, payroll) %>% summarize(top20=sum(Salary))
salaries$top20share <- salaries$top20/salaries$payroll*100
# Pasando unidades a millones de dólares.
salaries$payroll <- salaries$payroll/1000000
summary(salaries)
salaries <- arrange(salaries, top20share)
head(salaries, n=3)
tail(salaries, n=3)
# Variable Team en string
salaries$Team <- as.character(salaries$Team)
# Get the data on team performance, data retrieval
teamwins <- GET("http://www.baseball-reference.com/leagues/MLB/#teams_team_wins3000::none")
teamwins <- readHTMLTable(rawToChar(teamwins$content), stringsAsFactors = FALSE)[[1]]
write.csv(teamwins, "teamwins.csv", row.names = FALSE)
teamwins <- read.csv("teamwins.csv",stringsAsFactors = FALSE)
# Filtrando segunda base de datos.
teamwins$Year <- as.numeric(teamwins$Year)
teamwins <- filter(teamwins, !is.na(teamwins$Year))
#Datos entre 2005 y 2010
teamwins <- filter(teamwins, Year>2006 & Year<2014)
# Reacomodando los datos
# Primero generamos una variable year_games que colapsa años y juegos
teamwins <- unite(teamwins, year_games, Year, G)
# Usamos gather para colapsar columnas de wins por cada team
teamwins2 <- gather(data=teamwins, value=wins, key=team, ARI,ATL,BLA,BAL,BOS,CHC,CHW,CIN,CLE,COL,DET,HOU,KCR,LAA,LAD,MIA,MIL,MIN,NYM,NYY,OAK,PHI,PIT,SDP,SFG,SEA,STL,TBR,TEX,TOR,WSN)
head(teamwins2)
# Nuevamente separamos años y juegos
teamwins2 <- separate(teamwins2,year_games, c("year", "games"))
head(teamwins2)
# Convertir algunas variables a numéricas
teamwins2$games <- as.numeric(teamwins2$games)
teamwins2$wins <- as.numeric(teamwins2$wins)
teamwins2$year <- as.numeric(teamwins2$year)
# Obtenemos el porcentaje de ganados
teamwins2$pctwin <- teamwins2$wins/teamwins2$games*100
teamwins2 <- arrange(teamwins2,pctwin)
# Estadísticos y clasificación
summary(teamwins2)
head(teamwins2)
tail(teamwins2)
#Eliminando NA
teamwins2 <- filter(teamwins2, !is.na(pctwin))
tail(teamwins2)
# Uniendo base de datos
#Homologación de códigos
salaries$Team[salaries$Team=="SF"] = "SFG"
salaries$Team[salaries$Team=="KC"] = "KCR"
salaries$Team[salaries$Team=="SD"] = "SDP"
salaries$Team[salaries$Team=="TB"] = "TBR"
salaries$Team[salaries$Team=="WSH"] = "WSN"
salaries$Team[salaries$Team=="CWS"] = "CHW"
# Homologar nombre de la columna a Team
teamwins2$Team <- as.character(teamwins2$team)
teamwins2 <- select(teamwins2, -team)
# Uniendo por year y Team.
merged <- inner_join(teamwins2, salaries,by=c("year", "Team"))
summary(merged)
write.csv(merged, "database2005_2010.csv", row.names = FALSE)
# Algunas Gráficas
library(ggplot2)
ggplot(data=merged, aes(x=payroll,y=pctwin, label=Team, color=as.factor(year)))+ geom_text(size=3) +
ggtitle("Payroll and performance of MLB teams, 2007-2013") +
xlab("Payroll in millions") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
ggplot(data=merged, aes(x=top20share,y=pctwin, label=Team, color=as.factor(year))) + geom_text(size=3) +
ggtitle("Team inequality and performance of MLB teams, 2007-2013") +
xlab("Share of payroll earned by top 20%") + ylab("Percent of games won") +
scale_color_discrete(name="year") + theme_minimal()
# Regresión
library(stargazer)
model1 <- lm(pctwin ~ top20share, data=merged)
model2 <- lm(pctwin ~ top20share + payroll, data=merged)
model3 <- lm(pctwin ~ top20share + log(payroll) , data=merged)
stargazer(model1,model2,model3, type="text")
qqnorm(rstandard(model1))
qqline(rstandard(model1))
